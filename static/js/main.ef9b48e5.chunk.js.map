{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["Links","styled","div","SignedInLinks","to","SignedOutLinks","Navigator","Logo","Auth","Navbar","NotificationsList","Notifications","ProjectSummary","project","style","borderBottom","marginBottom","title","content","ProjectsContainer","ProjectList","projects","map","key","id","DashboardContainer","Dashboard","this","props","Component","connect","state","ProjectDetails","match","params","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","console","log","onSubmit","htmlFor","type","onChange","SignUp","firstName","lastName","CreateProject","createProject","dispatch","getState","gteFirebase","getFirestore","App","exact","path","component","Boolean","window","location","hostname","initState","authReducer","projectReducer","action","rootReducer","combineReducers","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","settings","timestampsInSnapshots","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestone","firebaseConfig","reactReduxFirebase","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef9b48e5.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Links = styled.div`\n    /* background-color: pink; */\n    display: flex;\n    align-items: stretch;\n    & ul {\n        list-style: none;\n        padding-left: 0px;\n        display: flex;\n        /* background: yellow;   */\n        margin:0;\n        align-items: center;\n        & li {\n            margin: 0 20px;\n            &:last-child{\n                a{\n                    padding: 10px 6px;\n                    border-radius: 50%;\n                    background-color: green;\n                }\n            }\n        }\n    }\n`;\n\nconst SignedInLinks = () => {\n    return (\n        <Links>\n            <ul>\n                <li>\n                    <NavLink to='/project-management-app/create'>New Project</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/project-management-app/'>Log Out</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/project-management-app'>MM</NavLink> \n                </li>\n            </ul>\n        </Links>\n    )\n}\n\nexport default SignedInLinks;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Links = styled.div`\n    /* background-color: aqua; */\n    & ul {\n        list-style: none;\n        padding-left: 0px;\n        display: flex;\n        & li {\n            margin: 0 20px;\n            & a{\n                /* color: white; */\n            }\n        }\n    }\n`;\n\n\nconst SignedOutLinks = () => {\n    return (\n        <Links>\n            <ul>\n                <li>\n                    <NavLink to='/project-management-app/signup'>Signup</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/project-management-app/signin'>Login</NavLink>\n                </li>\n            </ul>\n        </Links>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\n\n\nconst Navigator = styled.div`\n    font-size: 20px;\n    display: flex;\n    background-color: orange;\n    padding: 5px 0px;\n    a{\n        text-decoration: none;\n    }\n`;\nconst Logo = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n    /* background-color: pink; */\n    & a {\n        font-size: 50px;\n    }\n`;\nconst Auth = styled.div`\n    display: flex;\n    flex-grow: 2;\n    justify-content: center;\n`;\n\nconst Navbar = () => {\n    return (\n        <Navigator>\n            <Logo>\n                <Link to='/project-management-app'>Project Manager App</Link>\n            </Logo>\n            <Auth>\n                <SignedOutLinks/>\n                <SignedInLinks/>\n            </Auth>\n        </Navigator>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport styled from 'styled-components';\n\nconst NotificationsList = styled.div`\n    flex-grow: 2;\n    border: 1px solid black;\n`;\n\nconst Notifications = () => {\n    return (\n        <NotificationsList>\n            <p>notifications...</p>\n        </NotificationsList>\n    )\n}\n\nexport default Notifications;","import React from 'react';\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div style={{ borderBottom:'1px solid black', marginBottom:'5px'}}>\n            <span>{project.title}</span>\n            <p>{project.content}</p>\n            <p>16th November 2020</p>\n        </div>\n    )\n}\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary'\nimport styled from 'styled-components';\n\nconst ProjectsContainer = styled.div`\n    flex-grow: 3;\n    border: 1px solid red;\n`\n\nconst ProjectList = ({projects}) => {\n    return (\n        <ProjectsContainer>\n            { projects && projects.map(project => {\n                return (\n                    <ProjectSummary project={project} key={project.id}/>\n                )\n            })}\n        </ProjectsContainer>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Notifications from './Notifications';\nimport ProjectsList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\n\n\nconst DashboardContainer = styled.div`\n    display: flex;\n`;\n\n\nclass Dashboard extends Component {\n    render(){\n        const {projects} = this.props;\n        return(\n            <DashboardContainer>\n                <ProjectsList projects={projects}/>\n                <Notifications/>\n            </DashboardContainer>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    projects: state.project.projects\n});\n\n\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\n\nconst ProjectDetails = (props) => {\n    const id = props.match.params.id;\n    return (\n        <div>\n            <div>\n                <span>Project Title - {id}</span>\n                <p>lorem ipsun bla bla bla bla bla bla bla </p>\n            </div>\n            <hr/>\n            <div>\n                <p>Posted by: Ninja Turtle 1</p>\n                <p>16th Nov 2020</p>\n            </div>\n        </div>\n    )\n};\n\nexport default ProjectDetails;","import React, { Component } from 'react';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n    }\n\n    render(){\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}> {/*  PREVENT DEFAULT HERE*/}\n                    <h5>Sign In</h5>\n                    <div>\n                        <label htmlFor='email'>Email:</label>\n                        <input type='email' id='email' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <label htmlFor='password'>Password:</label>\n                        <input type='password' id='password' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <button>Login</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\n\nclass SignUp extends Component {\n    state = {\n        firstName:'',\n        lastName: '',\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n    }\n\n    render(){\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}> {/*  PREVENT DEFAULT HERE*/}\n                    <h5>Sign Up</h5>\n                    <div>\n                        <label htmlFor='firstName'>firstName:</label>\n                        <input type='text' id='firstName' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <label htmlFor='lastName'>lastName:</label>\n                        <input type='text' id='lastName' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <label htmlFor='email'>Email:</label>\n                        <input type='email' id='email' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <label htmlFor='password'>Password:</label>\n                        <input type='password' id='password' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <button>Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state)\n    }\n\n    render(){\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}> \n                    <h5>Create New Project</h5>\n                    <div>\n                        <label htmlFor='title'>Title:</label>\n                        <input type='text' id='title' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <label htmlFor='content'>Project Content:</label>\n                        <textarea id='content' onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <button>Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return { \n        createProject: (project) => dispatch(createProject(project))\n    } \n}\n\nexport default connect(null, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { gteFirebase, getFirestore }) => {\n        dispatch({ type: 'CREATE_PROJECT', project})\n    }\n}\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar/>\n        <Switch>\n          <Route exact path='/project-management-app' component={Dashboard}/>\n          <Route path='/project-management-app/project/:id' component={ProjectDetails}/>\n          <Route path='/project-management-app/signin' component={SignIn}/>\n          <Route path='/project-management-app/signup' component={SignUp}/>\n          <Route path='/project-management-app/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {}\n\nconst authReducer = (state = initState, action) => {\n    return state;\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'Correcto', content: 'This project is going to destroy grammarly...'},\n        {id: '2', title: 'Virtual Bank', content: 'new way to bank system less expensive than real banks'},\n        {id: '3', title: 'Face Detection', content: 'Project to help the sity secutiry. shhhh its private..lol'}\n\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT': {\n            console.log('created project', action.project);\n        }\n    }\n    return state;\n}\n\nexport default projectReducer;","import { combineReducers } from 'redux';\n\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer\n});\n\nexport default rootReducer;"," import firebase from 'firebase/app';\n import 'firebase/firestore'\n import 'firebase/auth'\n \n // Your web app's Firebase configuration\n var firebaseConfig = {\n    apiKey: \"AIzaSyDYFY6lmM0UXFDWVaeHiKRS0lYo6NdHhKo\",\n    authDomain: \"project-manager-app-a4212.firebaseapp.com\",\n    databaseURL: \"https://project-manager-app-a4212.firebaseio.com\",\n    projectId: \"project-manager-app-a4212\",\n    storageBucket: \"project-manager-app-a4212.appspot.com\",\n    messagingSenderId: \"1088786719007\",\n    appId: \"1:1088786719007:web:fcd34e06a19be79144502a\",\n    measurementId: \"G-E1NQXTHRLL\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestone, getFirestore} from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig'\n\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestone(firebaseConfig),\n    reactReduxFirebase(firebaseConfig)\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}